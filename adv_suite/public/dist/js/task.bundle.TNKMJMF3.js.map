{
  "version": 3,
  "sources": ["../../../../../apps/adv_suite/adv_suite/public/js/task/task_custom.js", "../../../../../apps/adv_suite/adv_suite/public/js/task/task_list.js"],
  "sourcesContent": ["frappe.ui.form.on('Task', {\n    onload_post_render: function (frm) {\n        frm.get_field(\"custom_project_materials\").grid.set_multiple_add(\"item_code\");\n        // Recuperar los valores de los separadores desde Advertech Settings y guardarlos en el formulario\n        frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'Advertech Settings',\n                fieldname: ['product_finished_separator', 'project_materials_separator']\n            },\n            callback: function(r) {\n                if (r.message) {\n                    frm.product_finished_separator = r.message.product_finished_separator || '|';\n                    frm.project_materials_separator = r.message.project_materials_separator || '|';\n                }\n            }\n        });\n        // Verificar si el campo type est\u00E1 establecido a \"Producto\"\n        if (frm.doc.type === \"Producto\") {\n            // Desencadenar el evento type\n            frm.trigger('type');\n        }\n        $(frm.fields_dict.custom_size.wrapper).find('textarea').css('height', '85px');\n        add_style_to_label(frm, 'custom_size');\n        // Establecer un tama\u00F1o m\u00EDnimo para el campo custom_product_finish\n        set_min_size_for_field(frm, 'custom_product_finish', 'auto', '85px');\n\n    },    \n    type: function(frm) {\n        // Obtener la referencia al campo multiselect\n        let field = frm.fields_dict['custom_product_finish']; \n        if (field && field.$wrapper) {\n            add_copy_icon_to_label(field, frm);\n            add_copy_icon_to_table(frm);\n            // add_copy_icon_to_multiselect(field, frm);\n        }\n    }\n});\n\n\nfrappe.ui.form.on('Project Materials', {\n    item_code: function(frm, cdt, cdn) {\n        let row = locals[cdt][cdn];\n        if (row.item_code) {\n            frappe.db.get_value('Item', { 'name': row.item_code }, 'item_name', (r) => {\n                if (r && r.item_name) {\n                    frappe.model.set_value(cdt, cdn, 'item_name', r.item_name);\n                } else {\n                    frappe.msgprint(__('Item Code {0} not found', [row.item_code]));\n                }\n            });\n        }\n    },\n    item_name: function(frm, cdt, cdn) {\n        let row = locals[cdt][cdn];\n        if (row.item_name) {\n            frappe.db.get_value('Item', { 'item_name': row.item_name }, 'name', (r) => {\n                if (r && r.name) {\n                    frappe.model.set_value(cdt, cdn, 'item_code', r.name);\n                } else {\n                    frappe.msgprint(__('Item Name {0} not found', [row.item_name]));\n                }\n            });\n        }\n    }\n});\n\n// Funci\u00F3n para agregar el \u00EDcono de copiar al campo multiselect\n// Agregar un contenedor con \u00EDcono ** dentro del campo **\nfunction add_copy_icon_to_multiselect(field, frm) {\n    // Verificar si el \u00EDcono ya fue agregado para evitar duplicados\n    if (field.$wrapper.find('.copy-multiselect-icon').length) {\n        return;\n    }\n\n    // Agregar un contenedor con \u00EDcono dentro del campo\n    field.$wrapper.append(`\n        <span class=\"copy-multiselect-icon\" \n              style=\"position: absolute; top: 50%; right: 10px; transform: translateY(-50%); cursor: pointer; font-size: 16px;\" title=\"${__('Copy')}\">\n            <svg class=\"icon icon-sm\">\n                <use xlink:href=\"/assets/frappe/icons/timeless/icons.svg#icon-duplicate\"></use>\n            </svg>\n        </span>\n    `);\n\n    // Manejar el clic en el \u00EDcono\n    field.$wrapper.find('.copy-multiselect-icon').on('click', function () {\n        // Obtener los valores seleccionados del multiselect\n        let selected_items = field.value || [];\n\n        // Usar el separador guardado en el formulario\n        let separator = frm.product_finished_separator || '|';\n        separator = separator.replace(/\\\\n/g, '\\n'); // Convertir \"\\n\" a salto de l\u00EDnea\n\n        // Si los valores son objetos, acceder al campo espec\u00EDfico (product_finish)\n        let concatenated_values = selected_items\n            .map(item => item.product_finish || item) // Cambia 'product_finish' al nombre del campo donde est\u00E1 la descripci\u00F3n\n            .join(separator);\n\n        // Copiar al portapapeles\n        copy_to_clipboard(concatenated_values);\n\n        // Mostrar una notificaci\u00F3n tipo alert\n        frappe.show_alert({\n            message: __('Copied to clipboard'),\n            indicator: 'green'\n        });\n    });\n}\n\n// Funci\u00F3n para copiar texto al portapapeles\nfunction copy_to_clipboard(text) {\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n}\n\n// Funci\u00F3n para agregar el \u00EDcono de copiar al lado derecho del label\nfunction add_copy_icon_to_label(field, frm) {\n    // Buscar el contenedor .form-column del campo\n    let form_column = field.$wrapper.closest('.form-column');\n\n    // Si no encontramos el .form-column, detener\n    if (!form_column.length) {\n        console.error('No se encontr\u00F3 el contenedor .form-column');\n        return;\n    }\n\n    // Buscar el label dentro del contenedor\n    let label_container = field.$wrapper.find('.control-label');\n    if (!label_container.length) {\n        console.error('No se encontr\u00F3 el contenedor del label (.control-label)');\n        return;\n    }\n\n    // Verificar si el \u00EDcono ya fue agregado\n    if (label_container.find('.copy-content-icon').length) {\n        return; // Evitar duplicados\n    }\n\n    // Insertar el \u00EDcono despu\u00E9s del label\n    label_container.addClass('like-disabled-input');\n    label_container.css('position', 'relative');\n    label_container.css('width', '100%');\n    label_container.append(`\n        <button class=\"btn icon-btn copy-content-icon\" style=\"position: absolute; top: 0px; right: 1%;\" onmouseover=\"this.classList.add('btn-default')\" onmouseout=\"this.classList.remove('btn-default')\" title=\"${__('Copy')}\">\n            <svg class=\"es-icon es-line  icon-sm\" style=\"\" aria-hidden=\"true\">\n                <use class=\"\" href=\"#es-line-copy-light\"></use>\n            </svg>\n        </button>\n    `);\n\n\n    // Manejar el clic en el \u00EDcono\n    label_container.find('.copy-content-icon').on('click', function () {\n        // Obtener los valores seleccionados del multiselect\n        let selected_items = field.value || [];\n\n        // Usar el separador guardado en el formulario\n        let separator = frm.product_finished_separator || '|';\n        separator = separator.replace(/\\\\n/g, '\\n'); // Convertir \"\\n\" a salto de l\u00EDnea\n\n        // Si los valores son objetos, acceder al campo espec\u00EDfico (product_finish)\n        let concatenated_values = selected_items\n            .map(item => item.product_finish || item) // Cambia 'product_finish' al nombre del campo donde est\u00E1 la descripci\u00F3n\n            .join(separator);\n\n        // Copiar al portapapeles\n        copy_to_clipboard(concatenated_values);\n\n        // Mostrar una notificaci\u00F3n tipo alert\n        frappe.show_alert({\n            message: __('Copied to clipboard'),\n            indicator: 'green'\n        });\n    });\n}\n\n// Funci\u00F3n para agregar el \u00EDcono de copiar a la tabla custom_project_materials\nfunction add_copy_icon_to_table(frm) {\n    let table_field = frm.fields_dict['custom_project_materials'];\n    if (!table_field) {\n        console.error('No se encontr\u00F3 el campo custom_project_materials');\n        return;\n    }\n\n    // Buscar el contenedor .form-column del campo\n    let form_column = table_field.$wrapper.closest('.form-column');\n\n    // Si no encontramos el .form-column, detener\n    if (!form_column.length) {\n        console.error('No se encontr\u00F3 el contenedor .form-column');\n        return;\n    }\n\n    // Buscar el label dentro del contenedor\n    let label_container = table_field.$wrapper.find('.control-label');\n    if (!label_container.length) {\n        console.error('No se encontr\u00F3 el contenedor del label (.control-label)');\n        return;\n    }\n\n    // Verificar si el \u00EDcono ya fue agregado\n    if (label_container.find('.copy-content-icon').length) {\n        return; // Evitar duplicados\n    }\n\n    // Insertar el \u00EDcono despu\u00E9s del label\n    label_container.addClass('like-disabled-input');\n    label_container.css('position', 'relative');\n    label_container.css('width', '100%');\n    label_container.append(`\n        <button class=\"btn icon-btn copy-content-icon\" style=\"position: absolute; top: 0px; right: 1%;\" onmouseover=\"this.classList.add('btn-default')\" onmouseout=\"this.classList.remove('btn-default')\" title=\"${__('Copy')}\">\n            <svg class=\"es-icon es-line  icon-sm\" style=\"\" aria-hidden=\"true\">\n                <use class=\"\" href=\"#es-line-copy-light\"></use>\n            </svg>\n        </button>\n    `);\n\n    // Manejar el clic en el \u00EDcono\n    label_container.find('.copy-content-icon').on('click', function () {\n        // Obtener los valores del campo item_name de cada rengl\u00F3n de la tabla\n        let selected_items = frm.doc.custom_project_materials || [];\n\n        // Usar el separador guardado en el formulario\n        let separator = frm.project_materials_separator || '|';\n        separator = separator.replace(/\\\\n/g, '\\n'); // Convertir \"\\n\" a salto de l\u00EDnea\n\n        let concatenated_values = selected_items\n            .map(item => item.item_name)\n            .join(separator);\n\n        // Copiar al portapapeles\n        copy_to_clipboard(concatenated_values);\n\n        // Mostrar una notificaci\u00F3n tipo alert\n        frappe.show_alert({\n            message: __('Copied to clipboard'),\n            indicator: 'green'\n        });\n    });\n}\n\nfunction add_style_to_label(frm, fieldname) {\n    let field = frm.fields_dict[fieldname];\n    if (!field) {\n        console.error(`No se encontr\u00F3 el campo ${fieldname}`);\n        return;\n    }\n\n    // Buscar el contenedor .form-column del campo\n    let form_column = field.$wrapper.closest('.form-column');\n\n    // Si no encontramos el .form-column, detener\n    if (!form_column.length) {\n        console.error('No se encontr\u00F3 el contenedor .form-column');\n        return;\n    }\n\n    // Buscar el label dentro del contenedor\n    let label_container = field.$wrapper.find('.control-label');\n    if (!label_container.length) {\n        console.error('No se encontr\u00F3 el contenedor del label (.control-label)');\n        return;\n    }\n\n    // Verificar si el \u00EDcono ya fue agregado\n    if (form_column.find('.copy-icon').length) {\n        return; // Evitar duplicados\n    }\n\n    label_container.addClass('like-disabled-input');\n    label_container.css('position', 'relative');\n    label_container.css('width', '100%');\n}\n\nfunction set_min_size_for_field(frm, fieldname, minWidth, minHeight) {\n    let field = frm.fields_dict[fieldname];\n    if (!field) {\n        console.error(`No se encontr\u00F3 el campo ${fieldname}`);\n        return;\n    }\n\n    // Aplicar estilos CSS para establecer el tama\u00F1o m\u00EDnimo\n    $(field.wrapper).find('.control-input').css({\n        'min-width': minWidth,\n        'min-height': minHeight\n    });\n}", "// No se usa en esta versi\u00F3n, ya que se establece en el property setter del orden de la lista\nfrappe.listview_settings['Task'] = {\n    onload: function(listview) {\n        listview.sort_selector = {\n            field: \"custom_last_assignment_date\",\n            order: \"ASC\"\n        };\n\n        // Forzar NULL al final\n        listview.page.fields_dict.sort_by.df.options = [\n            { label: __(\"Last Assignment Date\"), value: \"CASE WHEN custom_last_assignment_date IS NULL THEN 1 ELSE 0 END ASC, custom_last_assignment_date ASC\" }\n        ];\n    }\n};\n"],
  "mappings": "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",
  "names": []
}
