{
  "version": 3,
  "sources": ["../../../../../apps/adv_suite/adv_suite/public/js/desk/adv_suite.js", "../../../../../apps/adv_suite/adv_suite/public/js/desk/doctype_custom.js", "../../../../../apps/adv_suite/adv_suite/public/js/desk/assing_to_custom.js"],
  "sourcesContent": ["frappe.provide(\"adv_suite.utils\");\n\nadv_suite.utils.Slider = class Slider {\n    constructor() {\n        this.attachmentsDeleted = false;\n        this.mySwiper = null; // Asegurarse de que mySwiper est\u00E9 accesible en toda la clase\n    }\n\n    initializeImageSlider(frm) {\n        this.initializeSliderOnPageChange(frm);\n        this.checkAndAddViewImagesLink(frm);\n        this.AttachmentObserverManager.start(frm);\n    }\n\n    initializeSliderOnPageChange(frm) {\n        if (this.mySwiper) {\n            this.mySwiper.destroy(true, true); // Destruir cualquier instancia previa\n        }\n\n        this.initializeSwiper(frm);\n    }\n\n    initializeSwiper(frm) {\n        // Cargar CSS y JS de Swiper si no est\u00E1n cargados\n        if (!$('link[href=\"/assets/adv_suite/swiper/swiper-bundle.min.css\"]').length) {\n            $('head').append('<link rel=\"stylesheet\" href=\"/assets/adv_suite/swiper/swiper-bundle.min.css\">');\n        }\n\n        if (!window.Swiper) {\n            $.getScript(\"/assets/adv_suite/swiper/swiper-bundle.min.js\", () => {\n                this.createSliderModal(frm);\n            });\n        } else {\n            this.createSliderModal(frm);\n        }\n    }\n\n    createSliderModal(frm) {\n        // Elimina cualquier modal de slider existente al refrescar el formulario\n        if ($('#slider-modal').length) {\n            $('#slider-modal').remove();\n        }\n\n        // Inserta el modal del slider en pantalla completa\n        $('body').append(`\n            <div id=\"slider-modal\" style=\"display: none; position: fixed; top: 0; left: -5px; width: 100vw; height: 100vh; background: rgba(0, 0, 0, 0.9); z-index: 1050; justify-content: center; align-items: center;\">\n                <div class=\"swiper-container\" style=\"width: 100%; height: 90%;\">\n                    <div class=\"swiper-wrapper\"></div>\n                    <div class=\"swiper-button-next\" style=\"color: #fff;\"></div>\n                    <div class=\"swiper-button-prev\" style=\"color: #fff;\"></div>\n                    <div class=\"swiper-pagination\" style=\"color: #fff;\"></div>\n                </div>\n                <button id=\"close-slider\" class=\"btn btn-modal-close btn-link\" style=\"position: absolute; top: 0px; right: 30px; background: transparent; border: none; color: white; font-size: 30px; cursor: pointer; z-index: 1100;\">\n                    <svg class=\"icon icon-md\" aria-hidden=\"true\">\n                        <use class=\"close-alt\" href=\"#icon-close-swiper\"></use>\n                    </svg>\n                </button>\n            </div>\n        `);\n\n        // A\u00F1adir CSS personalizado para los puntos de paginaci\u00F3n\n        $('head').append(`\n            <style>\n                .swiper-pagination-bullet {\n                    background: #fafafa;\n                }\n                .swiper-pagination-bullet-active {\n                    background: var(--dark-green-avatar-bg);\n                }\n            </style>\n        `);\n        \n        // Evento para cerrar el slider\n        $('#close-slider').on('click', () => {\n            $('#slider-modal').hide();\n            if (this.attachmentsDeleted) {\n                cur_frm.reload_doc(); // Recargar el documento para actualizar los adjuntos\n                this.attachmentsDeleted = false; // Restablecer la variable\n            }    \n        });\n\n        // Inicializar el slider vac\u00EDo\n        this.loadImagesIntoSlider(frm);\n    }\n\n    loadImagesIntoSlider(frm) {\n        frappe.call({\n            method: 'frappe.client.get_list',\n            args: {\n                doctype: 'File',\n                filters: {\n                    attached_to_doctype: frm.doc.doctype,\n                    attached_to_name: frm.doc.name,\n                },\n                fields: ['file_name', 'file_url', 'creation', 'name'],\n                order_by: 'creation asc'\n            },\n            callback: (response) => {\n                const files = response.message || [];\n                const swiperWrapper = $('.swiper-wrapper');\n                if (files.length > 0) {\n                    swiperWrapper.empty(); // Vaciar el contenedor\n                    \n                    files.forEach(file => {\n                        if (/\\.(jpg|jpeg|png|gif|jfif|webp)$/i.test(file.file_name)) {\n                            swiperWrapper.append(`\n                                <div class=\"swiper-slide\" style=\"display: flex; justify-content: center; align-items: center; position: relative;\">\n                                    <img src=\"${file.file_url}\" alt=\"${file.file_name}\" style=\"width: auto; height: 100%; max-height: 90vh; object-fit: contain;\">\n                                    <button class=\"delete-image-btn\" data-file-name=\"${file.name}\" class=\"btn muted\" style=\"position: absolute; top: 15px; right: 70px; background: rgba(14, 8, 8, 1); color: white; border: none; border-radius: 50%; width: 30px; height: 30px; cursor: pointer;\">\n                                        <svg class=\"icon  icon-md\" style=\"stroke:#fff\" aria-hidden=\"true\">\n                                            <use class=\"\" href=\"#icon-delete\"></use>\n                                        </svg>\n                                    </button>                                \n                                </div>\n                            `);\n                        }\n                    });\n                    \n                    const loopMode = files.length > 1; // Habilitar el modo de bucle solo si hay m\u00E1s de una diapositiva\n                    this.mySwiper = new Swiper('.swiper-container', {\n                        loop: loopMode,\n                        pagination: {\n                            el: '.swiper-pagination',\n                            clickable: true,\n                        },\n                        navigation: {\n                            nextEl: '.swiper-button-next',\n                            prevEl: '.swiper-button-prev',\n                        },\n                    });                \n                } else {\n                    swiperWrapper.html(`<p style='color: white; text-align: center;'>${__(\"No image attachments found for this {0}.\", [__(frm.doc.doctype)])}</p>`);\n                }\n            }\n        });\n    }\n\n    checkAndAddViewImagesLink(frm) {\n        if (!frm.doc.doctype || !frm.doc.name) {\n            return;\n        }\n\n        frappe.call({\n            method: 'frappe.client.get_list',\n            args: {\n                doctype: 'File',\n                filters: {\n                    attached_to_doctype: frm.doc.doctype,\n                    attached_to_name: frm.doc.name,\n                },\n                fields: ['file_name', 'file_url']\n            },\n            callback: (response) => {\n                const files = response.message || [];\n                const hasImages = files.some(file => /\\.(jpg|jpeg|png|gif|jfif|webp)$/i.test(file.file_name));\n                \n                // Elimina enlaces previos\n                const linkId = `view-images-link-${frm.doc.doctype.toLowerCase().replace(/\\s+/g, '-')}`;            \n                $(`#${linkId}`).remove();\n                $('.sidebar-menu-item').remove();\n\n                if (hasImages) {\n                    const attachmentsSection = $('.form-sidebar .form-attachments .attachments-actions');\n                    if (attachmentsSection.length) {\n                        attachmentsSection.append(`\n                            <li class=\"sidebar-menu-item\">\n                                <span>\n                                    <svg class=\"icon icon-sm\">\n                                        <use xlink:href=\"/assets/frappe/icons/timeless/icons.svg#icon-image\"></use>\n                                    </svg>\n                                </span>\n                                <a href=\"#\" id=\"${linkId}\">${__(\"View Images\")}</a>\n                            </li>\n                        `);\n\n                        // Asignar evento al enlace\n                        $(document).off('click', `#${linkId}`).on('click', `#${linkId}`, (event) => {\n                            event.preventDefault();\n                            $('#slider-modal').show();\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n    AttachmentObserverManager = {\n        observer: null,\n        sidebarSelector: '.form-sidebar .form-attachments',\n\n        /**\n         * Inicia el observador en el contenedor de adjuntos\n         * @param {Object} frm - El formulario Frappe\n         */\n        __start(frm) {\n            // Det\u00E9n cualquier observador previo\n            this.stop();\n\n            // Crear un nuevo observador\n            this.observer = new MutationObserver(this.getOptimizedCallback(frm));\n\n            // Seleccionar el contenedor de adjuntos\n            const sidebar = document.querySelector(this.sidebarSelector);\n            if (sidebar) {\n                this.observer.observe(sidebar, { childList: true, subtree: true });\n                // console.log(`AttachmentObserverManager: Observador iniciado para ${frm.doctype} (${frm.docname}).`);\n            } else {\n                console.warn(`AttachmentObserverManager: Contenedor de adjuntos no encontrado para ${frm.doctype} (${frm.docname}).`);\n            }\n        },\n        start(frm) {\n            this.stop(); // Detiene cualquier observador previo\n        \n            const sidebar = document.querySelector(this.sidebarSelector);\n        \n            if (sidebar) {\n                // Observa si el nodo est\u00E1 cargado din\u00E1micamente\n                if (!sidebar.hasChildNodes()) {\n                    // console.warn(`AttachmentObserverManager: Contenedor vac\u00EDo. Reintentando en 100ms...`);\n                    setTimeout(() => this.__start(frm), 100);\n                    return;\n                }\n        \n                this.observer = new MutationObserver(this.getOptimizedCallback(frm));\n                this.observer.observe(sidebar, { childList: true, subtree: true });\n                // console.log(`AttachmentObserverManager: Observador iniciado para ${frm.doctype} (${frm.docname}).`);\n            } else {\n                console.warn(`AttachmentObserverManager: Contenedor de adjuntos no encontrado.`);\n            }\n        },\n        \n        /**\n         * Detiene y limpia el observador activo\n         */\n        stop() {\n            if (this.observer) {\n                this.observer.disconnect();\n                this.observer = null;\n                // console.log(\"AttachmentObserverManager: Observador detenido.\");\n            }\n        },\n\n        /**\n         * Retorna un callback optimizado para manejar mutaciones\n         * @param {Object} frm - El formulario Frappe\n         * @returns {Function} - Callback optimizado\n         */\n        getOptimizedCallback(frm) {\n            const debounce = (func, delay) => {\n                let timeout;\n                return function (...args) {\n                    clearTimeout(timeout);\n                    timeout = setTimeout(() => func.apply(this, args), delay);\n                };\n            };\n\n            return debounce((mutationsList) => {\n                let shouldCheck = false;\n                for (let mutation of mutationsList) {\n                    if (\n                        mutation.type === 'childList' &&\n                        (mutation.addedNodes.length > 0 || mutation.removedNodes.length > 0)\n                    ) {\n                        // Detecta cambios relevantes en nodos adjuntos\n                        shouldCheck = Array.from(mutation.addedNodes).some(node =>\n                            node.nodeType === 1 && node.classList.contains('attachment-row')\n                        ) || Array.from(mutation.removedNodes).some(node =>\n                            node.nodeType === 1 && node.classList.contains('attachment-row')\n                        );\n                    }\n                }\n                if (shouldCheck) {\n                    // console.log(`AttachmentObserverManager: Cambios detectados en ${frm.doctype} (${frm.docname}).`);\n                    adv_suite.slider.checkAndAddViewImagesLink(frm);\n                    adv_suite.slider.loadImagesIntoSlider(frm);\n                }\n            }, 300); // 300ms de debounce\n        }\n    }\n}\n\n// Exportar una instancia de la clase Slider\nexport const slider = new adv_suite.utils.Slider();", "import { slider } from './adv_suite.js';\n\nclass CustomFrappeForm extends frappe.ui.form.Form {\n    setup() {\n        super.setup();\n    }\n    setup_meta() {\n        super.setup_meta();\n    }\n    refresh(docname) {\n        super.refresh(docname);\n            // Verificar si cur_frm y cur_frm.meta est\u00E1n disponibles    \n            if (cur_frm && cur_frm.meta) {\n                // Cambiar la propiedad `make_attachments_public`\n                cur_frm.meta.make_attachments_public = true; // los establece como p\u00FAblicos por defecto\n                // console.log(\"Attachments set to public for:\", cur_frm.docname);\n        }\n        this.initializeSliderAndObserver();\n\n    }\n    before_unload(frm) {\n        super.before_unload(frm);\n        slider.AttachmentObserverManager.stop();\n    }\n    onload_post_render(frm) {\n        super.onload_post_render(frm);\n        this.initializeSliderAndObserver();\n    }\n\n    initializeSliderAndObserver() {\n        console.log(\"Initializing slider and observer for\", this.doc.doctype);\n        slider.AttachmentObserverManager.start(this);\n        slider.initializeImageSlider(this);\n        if (this.attachments) {\n            this.attachments.refresh = () => {\n                this.refresh();\n            };\n        }\n    }\n\n    setup_file_drop() {\n        var me = this;\n        this.$wrapper.on(\"dragenter dragover\", false).on(\"drop\", function (e) {\n            var dataTransfer = e.originalEvent.dataTransfer;\n            if (!(dataTransfer && dataTransfer.files && dataTransfer.files.length > 0)) {\n                return;\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n\n            if (me.doc.__islocal) {\n                frappe.msgprint(__(\"Please save before attaching.\"));\n                throw \"attach error\";\n            }\n\n            new frappe.ui.FileUploader({\n                doctype: me.doctype,\n                docname: me.docname,\n                frm: me,\n                files: dataTransfer.files,\n                folder: \"Home/Attachments\",\n                make_attachments_public: true, // los establece como p\u00FAblicos por defecto \n                on_success(file_doc) {\n                    me.attachments.attachment_uploaded(file_doc);\n                },\n            });\n        });\n    }\n}\n\n// Asignar la nueva clase a frappe.ui.form.Form\nfrappe.ui.form.Form = CustomFrappeForm;\n\n// Aplicar la nueva clase al formulario actual\nif (cur_frm)\n    extend_cscript(cur_frm.cscript, new frappe.ui.form.Form({ frm: cur_frm }));\n\n\n// Manejar el evento de clic para eliminar la imagen\n$(document).on('click', '.delete-image-btn', function () {\n    const fileName = $(this).data('file-name');\n    frappe.confirm(__('Are you sure you want to delete this image?'), function () {\n        frappe.call({\n            method: 'frappe.client.delete',\n            args: {\n                doctype: 'File',\n                name: fileName\n            },\n            callback: function (response) {\n                if (!response.exc) {\n\n                    // Marcar que se han eliminado adjuntos\n                    slider.attachmentsDeleted = true;\n\n                    // Verificar si el Swiper tiene m\u00E1s de una diapositiva\n                    if (slider.mySwiper.slides.length > 1) {\n                        // Eliminar la diapositiva de la imagen del Swiper\n                        slider.mySwiper.removeSlide(slider.mySwiper.activeIndex);\n                        slider.checkAndAddViewImagesLink(cur_frm);\n                    } else {\n                        // Destruir el Swiper y actualizar los adjuntos\n                        slider.mySwiper.destroy(true, true);\n                        $('#slider-modal').hide();\n                        cur_frm.reload_doc(); // Recargar el documento para actualizar los adjuntos\n                        slider.attachmentsDeleted = false; // Restablecer la variable\n                    }\n\n                    frappe.show_alert({ message: __('Image deleted successfully'), indicator: 'green' });\n                } else {\n                    frappe.show_alert({ message: __('Failed to delete image'), indicator: 'red' });\n                }\n            }\n        });\n    });\n});", "class CustomAssingTo {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.btn = this.parent.find(\".add-assignment-btn\").on(\"click\", () => this.add());\n\t\tthis.btn_wrapper = this.btn.parent();\n\n\t\tthis.refresh();\n\t}\n\trefresh() {\n\t\tif (this.frm.doc.__islocal) {\n\t\t\tthis.parent.toggle(false);\n\t\t\treturn;\n\t\t}\n\t\tthis.parent.toggle(true);\n\t\tthis.render(this.frm.get_docinfo().assignments);\n\t}\n\trender(assignments) {\n\t\tthis.frm.get_docinfo().assignments = assignments;\n\n\t\tlet assignments_wrapper = this.parent.find(\".assignments\");\n\n\t\tassignments_wrapper.empty();\n\t\tlet assigned_users = assignments.map((d) => d.owner);\n\n\t\tif (!assigned_users.length) {\n\t\t\tassignments_wrapper.hide();\n\t\t\treturn;\n\t\t}\n\n\t\tlet avatar_group = frappe.avatar_group(assigned_users, 5, {\n\t\t\talign: \"left\",\n\t\t\toverlap: true,\n\t\t});\n\n\t\tassignments_wrapper.show();\n\t\tassignments_wrapper.append(avatar_group);\n\t\tavatar_group.click(() => {\n\t\t\tnew frappe.ui.form.AssignmentDialog({\n\t\t\t\tassignments: assigned_users,\n\t\t\t\tfrm: this.frm,\n\t\t\t});\n\t\t});\n\t}\n\tadd() {\n\t\tvar me = this;\n\n\t\tif (this.frm.is_new() || this.frm.doc.__unsaved) {\n\t\t\tfrappe.throw(__(\"Please save the document before assignment\"));\n\t\t\treturn;\n\t\t}\n\n\t\tif (!me.assign_to) {\n\t\t\tme.assign_to = new frappe.ui.form.AssignToDialog({\n\t\t\t\tmethod: \"frappe.desk.form.assign_to.add\",\n\t\t\t\tdoctype: me.frm.doctype,\n\t\t\t\tdocname: me.frm.docname,\n\t\t\t\tfrm: me.frm,\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tme.render(r.message);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tme.assign_to.dialog.clear();\n\t\tme.assign_to.dialog.show();\n\t}\n\tremove(owner) {\n\t\tif (this.frm.is_new() || this.frm.doc.__unsaved) {\n\t\t\tfrappe.throw(__(\"Please save the document before removing assignment\"));\n\t\t\treturn;\n\t\t}\n\n\t\treturn frappe\n\t\t\t.xcall(\"frappe.desk.form.assign_to.remove\", {\n\t\t\t\tdoctype: this.frm.doctype,\n\t\t\t\tname: this.frm.docname,\n\t\t\t\tassign_to: owner,\n\t\t\t})\n\t\t\t.then((assignments) => {\n\t\t\t\tthis.render(assignments);\n\t\t\t});\n\t}\n};\n\nclass CustomAssignToDialog {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\n\t\tthis.make();\n\t\tthis.set_description_from_doc();\n\t}\n\tmake() {\n\t\tlet me = this;\n\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Add to ToDo\"),\n\t\t\tfields: me.get_fields(),\n\t\t\tprimary_action_label: __(\"Add\"),\n\t\t\tprimary_action: function () {\n\t\t\t\tlet args = me.dialog.get_values();\n\n\t\t\t\tif (args && args.assign_to) {\n\t\t\t\t\tme.dialog.set_message(\"Assigning...\");\n\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: me.method,\n\t\t\t\t\t\targs: $.extend(args, {\n\t\t\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\t\t\tname: me.docname,\n\t\t\t\t\t\t\tassign_to: args.assign_to,\n\t\t\t\t\t\t\tbulk_assign: me.bulk_assign || false,\n\t\t\t\t\t\t\tre_assign: me.re_assign || false,\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tbtn: me.dialog.get_primary_btn(),\n\t\t\t\t\t\tcallback: function (r) {\n\t\t\t\t\t\t\tif (!r.exc) {\n\t\t\t\t\t\t\t\tif (me.callback) {\n\t\t\t\t\t\t\t\t\tme.callback(r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\talert(__(\"Added\"));\n\t\t\t\t\t\t\t\tme.dialog && me.dialog.hide();\n\t\t\t\t\t\t\t\t// cur_form && cur_form.reload_doc();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tme.dialog.clear_message();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\tassign_to_me() {\n\t\tif (this.frm.is_new() || this.frm.doc.__unsaved) {\n\t\t\tfrappe.throw(__(\"Please save the document before assignment\"));\n\t\t\treturn;\n\t\t}\n\n\t\tlet me = this;\n\t\tlet assign_to = [];\n\n\t\tif (me.dialog.get_value(\"assign_to_me\")) {\n\t\t\tassign_to.push(frappe.session.user);\n\t\t}\n\n\t\tme.dialog.set_value(\"assign_to\", assign_to);\n\t}\n\tuser_group_list() {\n\t\tlet me = this;\n\t\tlet user_group = me.dialog.get_value(\"assign_to_user_group\");\n\t\tme.dialog.set_value(\"assign_to_me\", 0);\n\n\t\tif (user_group) {\n\t\t\tlet user_group_members = [];\n\t\t\tfrappe.db\n\t\t\t\t.get_list(\"User Group Member\", {\n\t\t\t\t\tparent_doctype: \"User Group\",\n\t\t\t\t\tfilters: { parent: user_group },\n\t\t\t\t\tfields: [\"user\"],\n\t\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\tuser_group_members = response.map((group_member) => group_member.user);\n\t\t\t\t\tme.dialog.set_value(\"assign_to\", user_group_members);\n\t\t\t\t});\n\t\t}\n\t}\n\tset_description_from_doc() {\n\t\tlet me = this;\n\n\t\tif (me.frm && me.frm.meta.title_field) {\n\t\t\tme.dialog.set_value(\"description\", me.frm.doc[me.frm.meta.title_field]);\n\t\t}\n\t}\n\tget_fields() {\n\t\tlet me = this;\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: __(\"Assign to me\"),\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tfieldname: \"assign_to_me\",\n\t\t\t\tdefault: 0,\n\t\t\t\tonchange: () => me.assign_to_me(),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Assign To User Group\"),\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tfieldname: \"assign_to_user_group\",\n\t\t\t\toptions: \"User Group\",\n\t\t\t\tonchange: () => me.user_group_list(),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"MultiSelectPills\",\n\t\t\t\tfieldname: \"assign_to\",\n\t\t\t\tlabel: __(\"Assign To\"),\n\t\t\t\treqd: true,\n\t\t\t\tget_data: function (txt) {\n\t\t\t\t\treturn frappe.db.get_link_options(\"User\", txt, {\n\t\t\t\t\t\tuser_type: \"System User\",\n\t\t\t\t\t\tenabled: 1,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Complete By\"),\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tfieldname: \"date\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Priority\"),\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tfieldname: \"priority\",\n\t\t\t\toptions: [\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Low\",\n\t\t\t\t\t\tlabel: __(\"Low\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"Medium\",\n\t\t\t\t\t\tlabel: __(\"Medium\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"High\",\n\t\t\t\t\t\tlabel: __(\"High\"),\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\t// Pick up priority from the source document, if it exists and is available in ToDo\n\t\t\t\tdefault: [\"Low\", \"Medium\", \"High\"].includes(\n\t\t\t\t\tme.frm && me.frm.doc.priority ? me.frm.doc.priority : \"Medium\"\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Comment\"),\n\t\t\t\tfieldtype: \"Small Text\",\n\t\t\t\tfieldname: \"description\",\n\t\t\t},\n\t\t];\n\t}\n};\n\nclass CustomAssignmentDialog{\n\tconstructor(opts) {\n\t\tthis.frm = opts.frm;\n\t\tthis.assignments = opts.assignments;\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Assignments\"),\n\t\t\tsize: \"small\",\n\t\t\tno_focus: true,\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Assign a user\"),\n\t\t\t\t\tfieldname: \"user\",\n\t\t\t\t\tfieldtype: \"Link\",\n\t\t\t\t\toptions: \"User\",\n\t\t\t\t\tchange: () => {\n\t\t\t\t\t\tlet value = this.dialog.get_value(\"user\");\n\t\t\t\t\t\tif (value && !this.assigning) {\n\t\t\t\t\t\t\tthis.assigning = true;\n\t\t\t\t\t\t\tthis.dialog.set_df_property(\"user\", \"read_only\", 1);\n\t\t\t\t\t\t\tthis.dialog.set_df_property(\"user\", \"description\", __(\"Assigning...\"));\n\t\t\t\t\t\t\tthis.add_assignment(value)\n\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\tthis.dialog.set_value(\"user\", null);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\t\t\t\tthis.dialog.set_df_property(\"user\", \"description\", null);\n\t\t\t\t\t\t\t\t\tthis.dialog.set_df_property(\"user\", \"read_only\", 0);\n\t\t\t\t\t\t\t\t\tthis.assigning = false;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\t\tfieldname: \"assignment_list\",\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\tthis.assignment_list = $(this.dialog.get_field(\"assignment_list\").wrapper);\n\t\tthis.assignment_list.removeClass(\"frappe-control\");\n\n\t\tthis.assignments.forEach((assignment) => {\n\t\t\tthis.update_assignment(assignment);\n\t\t});\n\t\tthis.dialog.show();\n\t}\n\trender(assignments) {\n\t\tthis.frm && this.frm.assign_to.render(assignments);\n\t}\n\tadd_assignment(assignment) {\n\t\tif (this.frm.is_new() || this.frm.doc.__unsaved) {\n\t\t\tfrappe.throw(__(\"Please save the document before assignment\"));\n\t\t\treturn;\n\t\t}\n\n\t\treturn frappe\n\t\t\t.xcall(\"frappe.desk.form.assign_to.add\", {\n\t\t\t\tdoctype: this.frm.doctype,\n\t\t\t\tname: this.frm.docname,\n\t\t\t\tassign_to: [assignment],\n\t\t\t})\n\t\t\t.then((assignments) => {\n\t\t\t\tthis.update_assignment(assignment);\n\t\t\t\tthis.render(assignments);\n\t\t\t});\n\t}\n\tremove_assignment(assignment) {\n\t\tif (this.frm.is_new() || this.frm.doc.__unsaved) {\n\t\t\tfrappe.throw(__(\"Please save the document before assignment\"));\n\t\t\treturn;\n\t\t}\n\t\treturn frappe.xcall(\"frappe.desk.form.assign_to.remove\", {\n\t\t\tdoctype: this.frm.doctype,\n\t\t\tname: this.frm.docname,\n\t\t\tassign_to: assignment,\n\t\t});\n\t}\n\tclose_assignment(assignment) {\n\t\treturn frappe.xcall(\"frappe.desk.form.assign_to.close\", {\n\t\t\tdoctype: this.frm.doctype,\n\t\t\tname: this.frm.docname,\n\t\t\tassign_to: assignment,\n\t\t});\n\t}\n\tupdate_assignment(assignment) {\n\t\tif (this.frm.is_new() || this.frm.doc.__unsaved) {\n\t\t\tfrappe.throw(__(\"Please save the document before assignment\"));\n\t\t\treturn;\n\t\t}\n\t\tconst in_the_list = this.assignment_list.find(`[data-user=\"${assignment}\"]`).length;\n\t\tif (!in_the_list) {\n\t\t\tthis.assignment_list.append(this.get_assignment_row(assignment));\n\t\t}\n\t}\n\tget_assignment_row(assignment) {\n\t\tconst row = $(`\n\t\t\t<div class=\"dialog-assignment-row\" data-user=\"${assignment}\">\n\t\t\t\t<div class=\"assignee\">\n\t\t\t\t\t${frappe.avatar(assignment)}\n\t\t\t\t\t${frappe.user.full_name(assignment)}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"Actions\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`);\n\n\t\tconst btn_group = row.find(\".btn-group\");\n\n\t\tif (assignment === frappe.session.user) {\n\t\t\tbtn_group.append(`\n\t\t\t\t<button type=\"button\" class=\"btn btn-default complete-btn\" title=\"${__(\"Done\")}\">\n\t\t\t\t\t${frappe.utils.icon(\"tick\", \"xs\")}\n\t\t\t\t</button>\n\t\t\t`);\n\t\t\tbtn_group.find(\".complete-btn\").click(() => {\n\t\t\t\tthis.close_assignment(assignment).then((assignments) => {\n\t\t\t\t\trow.remove();\n\t\t\t\t\tthis.render(assignments);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (assignment === frappe.session.user || this.frm.perm[0].write) {\n\t\t\tbtn_group.append(`\n\t\t\t\t<button type=\"button\" class=\"btn btn-default remove-btn\" title=\"${__(\"Cancel\")}\">\n\t\t\t\t${frappe.utils.icon(\"close\")}\n\t\t\t\t</button>\n\t\t\t`);\n\t\t\tbtn_group.find(\".remove-btn\").click(() => {\n\t\t\t\tthis.remove_assignment(assignment).then((assignments) => {\n\t\t\t\t\trow.remove();\n\t\t\t\t\tthis.render(assignments);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn row;\n\t}\n};\n\n// Asignar la nueva clase a frappe.ui.form ...\nfrappe.ui.form.AssignTo = CustomAssingTo;\nfrappe.ui.form.AssignToDialog = CustomAssignToDialog;\nfrappe.ui.form.AssignmentDialog = CustomAssignmentDialog;\n\n\n// Aplicar las nuevas clases al formulario actual\nif (cur_frm){\n    extend_cscript(cur_frm.cscript, new frappe.ui.form.AssignTo({ frm: cur_frm }));\n    extend_cscript(cur_frm.cscript, new frappe.ui.form.AssignToDialog({ frm: cur_frm }));\n    extend_cscript(cur_frm.cscript, new frappe.ui.form.AssignmentDialog({ frm: cur_frm }));\n}\n"],
  "mappings": "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",
  "names": []
}
